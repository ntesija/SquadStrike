{"version":3,"sources":["sidebar/sidebar.js","character/character.js","options/options.js","character-grid/character-grid.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","name","toLowerCase","replace","letter","toUpperCase","i","className","src","this","getIconPath","props","characters","alt","height","renderSidebarCharacters","Component","Character","iconPath","characterName","onKeyDown","bind","e","key","onClick","startsWith","focus","selected","banned","tabIndex","options","Options","type","defaultChecked","onChange","toggleOption","target","checked","characterList","CharacterGrid","stateObject","fighters","forEach","state","randomize","toggleOptions","character","preventDefault","obj","setState","direction","slice","parent","parentNode","currentIndex","indexOf","remainder","length","upIndex","children","downIndex","previousSibling","nextSibling","randomFighters","resetObj","fighter","push","randomNum","Math","floor","random","splice","characterGrid","toggleBan","renderGrid","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9b32d69.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './sidebar.css';\r\n\r\nexport default class Sidebar extends Component {\r\n    getIconPath(name) {\r\n        return name.toLowerCase().replace(/^(.)|(?:\\.\\s)(.)|[\\s.-](.)/g, letter => letter.toUpperCase()).replace(/[ &.]/g, '');\r\n    }\r\n\r\n    renderSidebarCharacters(i) {\r\n        return (\r\n            <div className=\"sidebar-character\">\r\n                <img src={`./images/${this.getIconPath(this.props.characters[i])}.png`} alt={this.props.characters[i]} height=\"156px\"></img>\r\n                <div className=\"name-block\">\r\n                    <span>{this.props.characters[i]}</span>\r\n                </div>\r\n            </div>)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar-container\">\r\n                {this.renderSidebarCharacters(0)}\r\n                {this.renderSidebarCharacters(1)}\r\n                {this.renderSidebarCharacters(2)}\r\n                {this.renderSidebarCharacters(3)}\r\n                {this.renderSidebarCharacters(4)}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './character.css';\r\n\r\nexport default class Character extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.iconPath = props.characterName.toLowerCase().replace(/^(.)|(?:\\.\\s)(.)|[\\s.-](.)/g, letter => letter.toUpperCase()).replace(/[ &.]/g, '');\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        if (e.key === 'Enter') {\r\n            this.props.onClick(e);\r\n        } else if (e.key.startsWith('Arrow')) {\r\n            this.props.focus(e, this.props.characterName);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'container' + (this.props.selected ? ' selected' : '') + (this.props.banned ? ' banned' : '')}\r\n                onClick={e => this.props.onClick(e)}\r\n                onKeyDown={this.onKeyDown}\r\n                tabIndex=\"0\">\r\n                {this.props.banned ? \r\n                <div className=\"banned-foreground\">\r\n                    <div className=\"left banned-block\"></div>\r\n                    <div className=\"right banned-block\"></div>\r\n                </div>\r\n                : ''}\r\n                <img src={`./images/${this.iconPath}.png`} alt={this.props.characterName} height=\"65px\"></img>\r\n                <div className=\"name-block\">\r\n                    <span>{this.props.characterName}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './options.css';\r\n\r\nconst options = {\r\n    sixtyFour: ['MARIO', 'DONKEY KONG', 'LINK', 'SAMUS', 'DARK SAMUS', 'YOSHI', 'KIRBY', 'FOX', 'PIKACHU',\r\n        'LUIGI', 'NESS', 'CAPTAIN FALCON', 'JIGGLYPUFF'],\r\n    melee: ['PEACH', 'DAISY', 'BOWSER', 'ICE CLIMBERS', 'SHEIK',\r\n        'ZELDA', 'DR. MARIO', 'PICHU', 'FALCO', 'MARTH', 'LUCINA', 'YOUNG LINK', 'GANONDORF', 'MEWTWO', 'ROY',\r\n        'CHROM', 'MR. GAME & WATCH'],\r\n    brawl: ['META KNIGHT', 'PIT', 'DARK PIT', 'ZERO SUIT SAMUS', 'WARIO', 'SNAKE',\r\n        'IKE', 'POKÉMON TRAINER', 'DIDDY KONG', 'LUCAS', 'SONIC', 'KING DEDEDE', 'OLIMAR', 'LUCARIO', 'R.O.B.',\r\n        'TOON LINK', 'WOLF'],\r\n    four: ['VILLAGER', 'MEGA MAN', 'Wii Fit TRAINER', 'ROSALINA & LUMA', 'LITTLE MAC', 'GRENINJA',\r\n        'PALUTENA', 'PAC-MAN', 'ROBIN', 'SHULK', 'BOWSER JR.', 'DUCK HUNT', 'RYU', 'KEN', 'CLOUD', 'CORRIN', 'BAYONETTA'],\r\n    ultimate: ['INKLING', 'RIDLEY', 'SIMON', 'RICHTER', 'KING K. ROOL', 'ISABELLE', 'INCINEROAR', 'PIRANHA PLANT', 'JOKER', 'HERO'],\r\n    mii: ['Mii Brawler', 'Mii Swordfighter', 'Mii Gunner'],\r\n    echo: ['DARK SAMUS', 'DAISY', 'LUCINA', 'CHROM', 'KEN', 'RICHTER']\r\n};\r\n\r\nexport default class Options extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"option-container\">\r\n                <label>64:\r\n                    <input type=\"checkbox\"\r\n                        defaultChecked={true}\r\n                        onChange={e => this.props.toggleOption(e.target.checked, options.sixtyFour)}></input>\r\n                </label>\r\n                <label>Melee:\r\n                    <input type=\"checkbox\"\r\n                        defaultChecked={true}\r\n                        onChange={e => this.props.toggleOption(e.target.checked, options.melee)}></input>\r\n                </label>\r\n                <label>Brawl:\r\n                    <input type=\"checkbox\"\r\n                        defaultChecked={true}\r\n                        onChange={e => this.props.toggleOption(e.target.checked, options.brawl)}></input>\r\n                </label>\r\n                <label>Sm4sh:\r\n                    <input type=\"checkbox\"\r\n                        defaultChecked={true}\r\n                        onChange={e => this.props.toggleOption(e.target.checked, options.four)}></input>\r\n                </label>\r\n                <label>Ultimate:\r\n                    <input type=\"checkbox\"\r\n                        defaultChecked={true}\r\n                        onChange={e => this.props.toggleOption(e.target.checked, options.ultimate)}></input>\r\n                </label>\r\n                <label>Echo:\r\n                    <input type=\"checkbox\"\r\n                        defaultChecked={true}\r\n                        onChange={e => this.props.toggleOption(e.target.checked, options.echo)}></input>\r\n                </label>\r\n                <label>Mii:\r\n                    <input type=\"checkbox\"\r\n                        defaultChecked={false}\r\n                        onChange={e => this.props.toggleOption(e.target.checked, options.mii)}></input>\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Sidebar from '../sidebar/sidebar';\r\nimport Character from '../character/character';\r\nimport Options from '../options/options';\r\nimport './character-grid.css';\r\n\r\nconst characterList = ['MARIO', 'DONKEY KONG', 'LINK', 'SAMUS', 'DARK SAMUS', 'YOSHI', 'KIRBY', 'FOX', 'PIKACHU',\r\n    'LUIGI', 'NESS', 'CAPTAIN FALCON', 'JIGGLYPUFF', 'PEACH', 'DAISY', 'BOWSER', 'ICE CLIMBERS', 'SHEIK',\r\n    'ZELDA', 'DR. MARIO', 'PICHU', 'FALCO', 'MARTH', 'LUCINA', 'YOUNG LINK', 'GANONDORF', 'MEWTWO', 'ROY',\r\n    'CHROM', 'MR. GAME & WATCH', 'META KNIGHT', 'PIT', 'DARK PIT', 'ZERO SUIT SAMUS', 'WARIO', 'SNAKE',\r\n    'IKE', 'POKÉMON TRAINER', 'DIDDY KONG', 'LUCAS', 'SONIC', 'KING DEDEDE', 'OLIMAR', 'LUCARIO', 'R.O.B.',\r\n    'TOON LINK', 'WOLF', 'VILLAGER', 'MEGA MAN', 'Wii Fit TRAINER', 'ROSALINA & LUMA', 'LITTLE MAC', 'GRENINJA',\r\n    'PALUTENA', 'PAC-MAN', 'ROBIN', 'SHULK', 'BOWSER JR.', 'DUCK HUNT', 'RYU', 'KEN', 'CLOUD', 'CORRIN', 'BAYONETTA',\r\n    'INKLING', 'RIDLEY', 'SIMON', 'RICHTER', 'KING K. ROOL', 'ISABELLE', 'INCINEROAR', 'PIRANHA PLANT', 'JOKER', 'HERO',\r\n    'Mii Brawler', 'Mii Swordfighter', 'Mii Gunner'];\r\n\r\nexport default class CharacterGrid extends Component {\r\n    constructor() {\r\n        super();\r\n        let stateObject = { fighters: {} };\r\n        characterList.forEach(name => {\r\n            stateObject.fighters[name] = { banned: name.startsWith('Mii'), selected: false };\r\n        });\r\n        this.state = stateObject;\r\n        this.randomize = this.randomize.bind(this);\r\n        this.focus = this.focus.bind(this);\r\n        this.toggleOptions = this.toggleOptions.bind(this);\r\n    }\r\n\r\n    toggleBan(e, character) {\r\n        e.preventDefault();\r\n        let obj = this.state.fighters;\r\n        obj[character] = { banned: !this.state.fighters[character].banned };\r\n        this.setState({ fighters: obj });\r\n    }\r\n\r\n    focus(e, characterName) {\r\n        const direction = e.key.slice(5);\r\n        const parent = e.target.parentNode;\r\n        const currentIndex = characterList.indexOf(characterName);\r\n        const remainder = characterList.length % 6;\r\n        switch (direction) {\r\n            case 'Up':\r\n                let upIndex = currentIndex - 6;\r\n                if (upIndex < 0) break;\r\n                if (currentIndex >= characterList.length - remainder) {\r\n                    upIndex += remainder;\r\n                }\r\n                parent.children[upIndex].focus();\r\n                break;\r\n            case 'Down':\r\n                let downIndex = currentIndex + 6;\r\n                if (currentIndex >= characterList.length - remainder - 6 && currentIndex < characterList.length - remainder) {\r\n                    const hasDown = currentIndex % 6 >= (6 - remainder) / 2 && currentIndex % 6 < 6 - (6 - remainder) / 2;\r\n                    if (!hasDown) {\r\n                        break;\r\n                    } else {\r\n                        downIndex = currentIndex + 6 - remainder;\r\n                    }\r\n                }\r\n                parent.children[downIndex >= characterList.length ? characterList.length - 1 : downIndex].focus();\r\n                break;\r\n            case 'Left':\r\n                if (e.target.previousSibling) {\r\n                    e.target.previousSibling.focus();\r\n                }\r\n                break;\r\n            case 'Right':\r\n                if (e.target.nextSibling) {\r\n                    e.target.nextSibling.focus();\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    toggleOptions(checked, fighters) {\r\n        let state = this.state.fighters;\r\n        for (const fighter of fighters) {\r\n            state[fighter].banned = !checked;\r\n        }\r\n        this.setState({ fighters: state });\r\n    }\r\n\r\n    randomize() {\r\n        if (this.state.randomFighters) {\r\n            let resetObj = this.state.fighters;\r\n            for (const fighter of this.state.randomFighters) {\r\n                resetObj[fighter] = { banned: this.state.fighters[fighter].banned, selected: false };\r\n            }\r\n            this.setState({ fighters: resetObj });\r\n        }\r\n\r\n        const fighters = [];\r\n        for (const fighter in this.state.fighters) {\r\n            if (!this.state.fighters[fighter].banned) {\r\n                fighters.push(fighter);\r\n            }\r\n        }\r\n        if (fighters.length < 5) {\r\n            return;\r\n        }\r\n\r\n        const randomFighters = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            const randomNum = Math.floor(Math.random() * fighters.length);\r\n            randomFighters.push(fighters.splice(randomNum, 1)[0]);\r\n        }\r\n\r\n        let obj = this.state.fighters;\r\n        for (let i = 0; i < randomFighters.length; i++) {\r\n            obj[randomFighters[i]] = { banned: false, selected: true };\r\n        }\r\n        this.setState({ fighters: obj });\r\n        this.setState({ randomFighters });\r\n    }\r\n\r\n    renderGrid() {\r\n        const characterGrid = [];\r\n        for (const character in this.state.fighters) {\r\n            characterGrid.push(\r\n                <Character characterName={character}\r\n                    banned={this.state.fighters[character].banned}\r\n                    selected={this.state.fighters[character].selected}\r\n                    key={character}\r\n                    onClick={e => this.toggleBan(e, character)}\r\n                    focus={this.focus} />\r\n            );\r\n        }\r\n\r\n        return characterGrid;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"action-bar\">\r\n                    <button className=\"generate\" type=\"button\" onClick={this.randomize}>Randomize</button>\r\n                    <Options toggleOption={(checked, fighters) => this.toggleOptions(checked, fighters)} />\r\n                </div>\r\n                <div className=\"main-screen\">\r\n                    {this.state.randomFighters && this.state.randomFighters.length > 0 && <Sidebar characters={this.state.randomFighters} />}\r\n                    <div className=\"character-grid\">\r\n                        {this.renderGrid()}\r\n                    </div>\r\n                    {this.state.randomFighters && this.state.randomFighters.length > 0 && <Sidebar characters={this.state.randomFighters} />}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport CharacterGrid from './character-grid/character-grid';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CharacterGrid />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}